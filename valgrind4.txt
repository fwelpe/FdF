==8183== Memcheck, a memory error detector
==8183== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8183== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==8183== Command: ./a.out maps/t2.fdf
==8183== 
==8183== Syscall param writev(vector[...]) points to uninitialised byte(s)
==8183==    at 0x578BFE0: __writev_nocancel (syscall-template.S:84)
==8183==    by 0x5A62F28: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==8183==    by 0x5A6331C: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==8183==    by 0x5A633A4: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==8183==    by 0x508954D: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==8183==    by 0x50896AF: _XReadEvents (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==8183==    by 0x5087BD0: XWindowEvent (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==8183==    by 0x405711: mlx_int_wait_first_expose (in /home/fwlpe/FdF/a.out)
==8183==    by 0x4054E3: mlx_new_window (in /home/fwlpe/FdF/a.out)
==8183==    by 0x403AFC: st_init (prepares.c:65)
==8183==    by 0x402B67: main (main.c:32)
==8183==  Address 0x6291e9c is 28 bytes inside a block of size 16,384 alloc'd
==8183==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8183==    by 0x5079722: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==8183==    by 0x4050F2: mlx_init (in /home/fwlpe/FdF/a.out)
==8183==    by 0x403AC7: st_init (prepares.c:64)
==8183==    by 0x402B67: main (main.c:32)
==8183== 
==8183== Invalid write of size 1
==8183==    at 0x404AAA: ft_strcpy (in /home/fwlpe/FdF/a.out)
==8183==    by 0x403D65: ft_cp2darr (read.c:54)
==8183==    by 0x403E5C: str_map_solve (read.c:71)
==8183==    by 0x403F3D: fillall_validate (read.c:91)
==8183==    by 0x403B75: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183==  Address 0x62d9156 is 0 bytes after a block of size 6 alloc'd
==8183==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8183==    by 0x403D1A: ft_cp2darr (read.c:53)
==8183==    by 0x403E5C: str_map_solve (read.c:71)
==8183==    by 0x403F3D: fillall_validate (read.c:91)
==8183==    by 0x403B75: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183== 
==8183== Invalid read of size 1
==8183==    at 0x402397: length_number (ft_atoi_base.c:26)
==8183==    by 0x40242B: ft_atoi_base (ft_atoi_base.c:46)
==8183==    by 0x401AE9: get_colour (colours.c:33)
==8183==    by 0x40393E: fill_base_p (prepares.c:31)
==8183==    by 0x403A7A: p_arr_init (prepares.c:53)
==8183==    by 0x403B89: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183==  Address 0x62d9156 is 0 bytes after a block of size 6 alloc'd
==8183==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8183==    by 0x403D1A: ft_cp2darr (read.c:53)
==8183==    by 0x403E5C: str_map_solve (read.c:71)
==8183==    by 0x403F3D: fillall_validate (read.c:91)
==8183==    by 0x403B75: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183== 
==8183== Invalid read of size 1
==8183==    at 0x40246E: ft_atoi_base (ft_atoi_base.c:47)
==8183==    by 0x401AE9: get_colour (colours.c:33)
==8183==    by 0x40393E: fill_base_p (prepares.c:31)
==8183==    by 0x403A7A: p_arr_init (prepares.c:53)
==8183==    by 0x403B89: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183==  Address 0x62d9156 is 0 bytes after a block of size 6 alloc'd
==8183==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8183==    by 0x403D1A: ft_cp2darr (read.c:53)
==8183==    by 0x403E5C: str_map_solve (read.c:71)
==8183==    by 0x403F3D: fillall_validate (read.c:91)
==8183==    by 0x403B75: st_init (prepares.c:69)
==8183==    by 0x402B67: main (main.c:32)
==8183== 
==8183== 
==8183== HEAP SUMMARY:
==8183==     in use at exit: 873,327 bytes in 10,213 blocks
==8183==   total heap usage: 21,431 allocs, 11,218 frees, 1,463,816 bytes allocated
==8183== 
==8183== LEAK SUMMARY:
==8183==    definitely lost: 0 bytes in 0 blocks
==8183==    indirectly lost: 0 bytes in 0 blocks
==8183==      possibly lost: 0 bytes in 0 blocks
==8183==    still reachable: 873,327 bytes in 10,213 blocks
==8183==         suppressed: 0 bytes in 0 blocks
==8183== Reachable blocks (those to which a pointer was found) are not shown.
==8183== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==8183== 
==8183== For counts of detected and suppressed errors, rerun with: -v
==8183== Use --track-origins=yes to see where uninitialised values come from
==8183== ERROR SUMMARY: 30014 errors from 4 contexts (suppressed: 0 from 0)
